# Setting up
###################################################################
###################################################################
# Set up work directory
#------------------------------------------------------------------
setwd('C:/Users/Shiyu/Dropbox/CS6140/hw2')
# Read data
#------------------------------------------------------------------
data <- read.table('prostate.txt', header=TRUE, row.names=1, sep='\t', stringsAsFactors = FALSE)
# factor the two categorical variables
data$svi <- factor(data$svi)
data$gleason <- factor(data$gleason)
# Select the training and the validation sets
#------------------------------------------------------------------
train <- data[data$train,]
# one-variable summary statistics
summary(train)
# two-variable summary statistics
pairs(lpsa ~ lcavol + lweight + age + lbph + lcp + pgg45, data = train)
# Setting up
###################################################################
###################################################################
# Set up work directory
#------------------------------------------------------------------
setwd('C:/Users/Shiyu/Dropbox/CS6140/hw2')
# Read data
#------------------------------------------------------------------
data <- read.table('prostate.txt', header=TRUE, row.names=1, sep='\t', stringsAsFactors = FALSE)
# factor the two categorical variables
data$svi <- factor(data$svi)
data$gleason <- factor(data$gleason)
# Select the training and the validation sets
#------------------------------------------------------------------
train <- data[data$train,]
# one-variable summary statistics
summary(train)
# two-variable summary statistics
pairs(lpsa ~ lcavol + lweight + age + lbph + lcp + pgg45, data = train)
# Look at the correlation coefficients
cor(data[,c(1,2,3,4,6,8,9)])
data
cor(data[,c(9)])
cor(data[,c(9)])cor(data[,c(9)])
cor(data[,c(1,2,3,4,6,8,9)])
# Setting up
###################################################################
###################################################################
# Set up work directory
#------------------------------------------------------------------
setwd('C:/Users/Shiyu/Dropbox/CS6140/hw2')
############################ Question 1 ##########################################
# Read data
#------------------------------------------------------------------
data <- read.table('prostate.txt', header=TRUE, row.names=1, sep='\t', stringsAsFactors = FALSE)
# factor the two categorical variables
data$svi <- factor(data$svi)
data$gleason <- factor(data$gleason)
# Select the training and the validation sets
#------------------------------------------------------------------
train <- data[data$train,]
############################ Question 2 ##########################################
# one-variable summary statistics
summary(train)
#it analyzed the general data of each column, including man, min, mean, etc.
# two-variable summary statistics
pairs(lpsa ~ lcavol + lweight + age + lbph + lcp + pgg45, data = train)
# From the chart
# By simply compare lpsa and oher variables, it tells that: 
# 1.lspa increases with lcavol.
# 2.Lcp and lweight also increse with lspa, but it is not quite strong. 
# 3.A even less strong but possible positive association is with lbph. 
# Generally, This suggests that not all variabels may be needed 
# since some are correlated and may provide similar information about ;psa.
# Correlation coefficients
cor(data[,c(1,2,3,4,6,8,9)])
# The result
# 1. lcavol has the highest correlation coefficients (0.7344603) suggesting a moderate positive linear association. 
# 2. age and lbph have very low correlations (0.1695928, 0.1798094).
# 3. lweight, lcp and pgg45 have small positive correlations (0.4333194, 0.5488132, 0.4223159).
# This suggests that the most important linear variables are lcavol with lcp, lweight and pgg45 possibly
# being important as well. However, we have seen that the relationship between lpsa and the independent
# variables is not necessarily linear, so a transformation might be necessary
# Categorical variables
boxplot(psa ~ svi, data = data)
boxplot(psa ~ gleason, data = data)
boxplot(lpsa ~ svi, data = data)
boxplot(lpsa ~ gleason, data = data)
boxplot(lpsa ~ svi, data = data)
boxplot(lpsa ~ svi, data = train)
q()
